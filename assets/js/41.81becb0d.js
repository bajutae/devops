(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{471:function(s,t,a){"use strict";a.r(t);var n=a(17),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"validate-테스트-자동화"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validate-테스트-자동화"}},[s._v("#")]),s._v(" Validate, 테스트 자동화")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("⚡️ 목표")]),s._v(" "),a("p",[s._v("✅ "),a("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[s._v("Husky"),a("OutboundLink")],1),s._v("를 이용하여 커밋할 때 Validate, 테스트 스크립트를 실행합니다."),a("br"),s._v("\n✅ "),a("a",{attrs:{href:"https://github.com/okonet/lint-staged",target:"_blank",rel:"noopener noreferrer"}},[s._v("lint-staged"),a("OutboundLink")],1),s._v("를 이용하여 Husky 실행 속도를 최적화 합니다.")])]),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#husky"}},[s._v("Husky")])]),a("li",[a("a",{attrs:{href:"#link-staged"}},[s._v("link-staged")])]),a("li",[a("a",{attrs:{href:"#마무리"}},[s._v("마무리")])])])]),a("p"),s._v(" "),a("p",[s._v("Git을 도입하고, GitHub도 사용하고 GitHub Flow로 협업도 하고 개발팀의 개발문화가 많이 좋아진 것 같습니다. 🔥")]),s._v(" "),a("Chat-KakaoRoom",[a("Chat-KakaoMsg",{attrs:{msg:"요즘 PR이 많이 올라오는데.. validate나 테스트를 깜빡하고 Push하는 경우가 많습니다",isMe:"true"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"아.. 진짜 계속 까먹어요 ㅠ 이거 혹시 해결방법 없을까요?",isMe:"true"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"깜빡하는 팀원에게 벌금을 걷는..건 아니고 커밋하기 전에 강제로  체크하면 되겠네요",isMe:"false"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"오 강제로 체크할 수가 있나요?",isMe:"true"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"Git은 hook을 지원하기 때문에 pre-commit hook을 이용하면 됩니다",isMe:"false"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{msg:".git/hooks 디렉토리 봤는데.. 봐도 잘 모르겠어요 ㅠㅠ",isMe:"true"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"ㅎㅎㅎ 쉘 스크립트를 몰라도 사용할 수 있어요. Husky를 도입해 보죠",isMe:"false"}})],1),s._v(" "),a("h2",{attrs:{id:"husky"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[s._v("#")]),s._v(" Husky")]),s._v(" "),a("p",[s._v("Husky는 Git hook을 손쉽게 사용할 수 있게 도와주는 도구입니다. "),a("s",[s._v("쉬운 게 최고")])]),s._v(" "),a("p",[s._v("Husky를 설치합니다. 처음 설치하는 경우 손이 좀 많이 가는데, 이후에 사용하는 개발자는 "),a("code",[s._v("npm install")]),s._v(" 후 바로 사용하면 됩니다.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Husky 설치")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" husky --save-dev\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# package.json에 prepare 스크립트를 추가합니다 (설치하는 사람이 최초 한번만 실행)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" set-script prepare "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"husky install"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Git Hook 설정")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run prepare\n")])])]),a("p",[s._v("설치가 완료되면, Git Hook을 설정합니다. "),a("code",[s._v(".husky/pre-commit")]),s._v(" 파일을 직접 수정하거나 스크립트를 이용합니다.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit 하기 전에 validate와 test 스크립트 실행")]),s._v("\nnpx husky "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" .husky/pre-commit "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run validate && npm run test"')]),s._v("\n")])])]),a("p",[s._v("이제 수정사항을 커밋해볼까요?")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 변경된 파일 추가")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 커밋")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"add husky"')]),s._v("\n")])])]),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" awesome-api-server@1.0.0 validate\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" awesome-api-server@1.0.0 lint\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" eslint "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" awesome-api-server@1.0.0 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" prettier --write "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/**/*.+(js|json)"')]),s._v("\n\nsrc/__tests__/app.js 26ms\nsrc/app.js 9ms\nsrc/server.js 4ms\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" awesome-api-server@1.0.0 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" jest\n\n PASS  src/__tests__/app.js\n  ✓ "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/"')]),s._v(" 요청시 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello: world"')]),s._v(" 응답 확인 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  ✓ "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/ping"')]),s._v(" 요청시 "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"status: ok"')]),s._v(" 응답 확인 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  ✓ "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/activity"')]),s._v(" 접속시 정상 응답 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  ✓ "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/activity"')]),s._v(" 접속시 boredapi 오류 처리 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  ✓ "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/activity"')]),s._v(" 접속시 activity 빈값 처리 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nTest Suites: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" total\nTests:       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" total\nSnapshots:   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" total\nTime:        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.323")]),s._v(" s, estimated "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" s\nRan all "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("test")]),s._v(" suites.\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("add-activity e027190"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" husky\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" files changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("29")]),s._v(" insertions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" deletion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n create mode "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100755")]),s._v(" .husky/pre-commit\n")])])]),a("p",[s._v("Validate와 테스트 스크립트가 자동으로 실행되는 것을 확인할 수 있습니다. 스크립트가 실패하면 커밋도 실패하기 떄문에 이제 이전같은 실수는 더이상 없겠죠?")]),s._v(" "),a("Chat-KakaoRoom",[a("Chat-KakaoMsg",{attrs:{msg:"Husky 간단하고 진짜 좋네요!",isMe:"true"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"근데.. 코드가 좀 커지니까 git commit 명령어가 너무 느려졌어요 ㅠㅠ 팀원들도 뭐라고 하고.. 빼자고..",isMe:"true"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"아무래도 코드가 크면 체크하는 시간도 오래 걸리고 사용자 경험이 좋지는 않죠 ㅠㅠ",isMe:"false"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"그럼 커밋할 파일들만 체크하는 건 어떨까요?",isMe:"false"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"???? 😳",isMe:"true"}}),s._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"link-staged를 도입해서 개선해보죠",isMe:"false"}})],1),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("Husky 더보기")]),s._v(" "),a("p",[s._v("📔 "),a("a",{attrs:{href:"https://typicode.github.io/husky",target:"_blank",rel:"noopener noreferrer"}},[s._v("Husky 공식문서"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"link-staged"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#link-staged"}},[s._v("#")]),s._v(" link-staged")]),s._v(" "),a("p",[s._v("link-staged는 Git의 staged 영역에 있는 파일만 필터링해서 작업할 수 있는 도구입니다. 전체 파일 중에 commit 할 파일만 체크하기 때문에 속도를 대폭 개선할 수 있습니다.")]),s._v(" "),a("p",[s._v("link-staged를 설치합니다.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lint-staged 설치")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" lint-staged --save-dev\n")])])]),a("p",[a("code",[s._v("package.json")]),s._v("에 link-staged 스크립트를 추가합니다.")]),s._v(" "),a("div",{staticClass:"language-json extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node src/server.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint ."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"format"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prettier --write \\"src/**/*.+(js|json)\\""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"validate"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run lint && npm run format"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"test:watch"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jest --watch"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prepare"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"husky install"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lint-staged"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lint-staged"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ⇠ 추가")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),a("p",[s._v("어떤 파일을 어떻게 체크할지 "),a("code",[s._v(".lintstagedrc")]),s._v("파일에 설정합니다.")]),s._v(" "),a("p",[a("code",[s._v("*.js")]),s._v(" 파일에 대해서 Prettier, ESLint, Jest를 수행하고 Jest는 수정한 파일과 관련된 테스트를 수행하기 위해 "),a("code",[s._v("--findRelatedTests")]),s._v(" 옵션을 추가합니다.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.+(js)"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"prettier --write"')]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"eslint"')]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jest --findRelatedTests"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("p",[s._v("기존 huksy Hook 설정을 변경합니다. "),a("code",[s._v(".husky/pre-commit")]),s._v(" 파일을 수정합니다.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br")]),a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# npm run validate && npm run test // ⇠ 삭제")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run lint-staged "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ⇠ 추가")]),s._v("\n")])])]),a("p",[s._v("이제 어떻게 동작하는지 커밋을 해볼까요?")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 변경된 파일 추가")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 커밋")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"add lint-staged"')]),s._v("\n")])])]),a("p",[s._v("아무런 체크 없이 커밋이 되었습니다. 수정한 파일중에 "),a("code",[s._v(".js")]),s._v(" 파일이 없어서 lint-staged에 설정한 스크립트가 실행되지 않았습니다.")]),s._v(" "),a("p",[s._v("일부러 "),a("code",[s._v(".js")]),s._v(" 파일을 하나 수정하고 다시 커밋합니다.")]),s._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("✔ Preparing lint-staged"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n✔ Running tasks "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" staged files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n✔ Applying modifications from tasks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n✔ Cleaning up temporary files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("add-activity a02475c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" update js\n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("file")]),s._v(" changed, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" insertion"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("lint-staged가 수정된 파일만 골라서 체크하는 것을 확인할 수 있습니다.")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("lint-staged 더보기")]),s._v(" "),a("p",[s._v("📔 "),a("a",{attrs:{href:"https://github.com/okonet/lint-staged#configuration",target:"_blank",rel:"noopener noreferrer"}},[s._v("lint-staged 설정 공식문서"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"마무리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#마무리"}},[s._v("#")]),s._v(" 마무리")]),s._v(" "),a("p",[s._v('도구를 도입하는 목적은 "더 빨리, 더 안정적으로" 개발하는 것임을 생각하고 개선할 수 있는 방법을 찾는 것이 중요합니다. '),a("s",[s._v("찾아보면 이미 다 있음")])]),s._v(" "),a("p",[s._v("이제 개발 환경은 여기까지 설정하고 본격적으로 배포를 해봅시다.")])],1)}),[],!1,null,null,null);t.default=e.exports}}]);