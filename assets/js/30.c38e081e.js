(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{458:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git"}},[t._v("#")]),t._v(" Git")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("⚡️ 목표")]),t._v(" "),a("p",[t._v("✅ "),a("a",{attrs:{href:"https://git-scm.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git"),a("OutboundLink")],1),t._v("을 이용하여 소스를 버전 관리합니다."),a("br"),t._v("\n✅ TDD 방식으로 새 기능을 추가합니다.")])]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#버전관리"}},[t._v("버전관리")])]),a("li",[a("a",{attrs:{href:"#tdd"}},[t._v("TDD")])]),a("li",[a("a",{attrs:{href:"#마무리"}},[t._v("마무리")])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"버전관리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#버전관리"}},[t._v("#")]),t._v(" 버전관리")]),t._v(" "),a("Chat-KakaoRoom",[a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"지난번에 파일을 압축해서 보내주셨는데, 혹시 GitHub 저장소에 초대해 주실 수 있나요?",isMe:"false"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"아.. 저희가 아직 Git을 안쓰고 소스를 이메일로 공유하고 있어서요.. ㅠㅠ",isMe:"true"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"매일매일 하루에 한번씩 압축해서 보관해요! ㅎㅎ",isMe:"true"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"읔.. 그럼 이번에 본격적으로 Git을 도입해볼까요??",isMe:"false"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"Git을 사용하면 타임머신처럼 이전 상태로 쉽게 돌아갈 수 있고 협업도 더 간편해질거에요 ㅎㅎ",isMe:"false"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"오.. 좋습니다!",isMe:"true"}})],1),t._v(" "),a("p",[t._v("Git은 리누스 토발즈가 2005년에 "),a("s",[t._v("2주 만에 만든")]),t._v(" 분산 버전 관리 시스템(DVCS)"),a("sup",[t._v("Distributed version control systems")]),t._v("입니다. 속도가 빠르고 강력한 브랜치 기능으로 사실상 표준으로 사용하고 있습니다.")]),t._v(" "),a("p",[t._v("우선 "),a("a",{attrs:{href:"https://subicura.com/git/prepare/git-setup.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git을 설치"),a("OutboundLink")],1),t._v("하고 저장소를 설정합니다.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 저장소 초기화")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" init\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 현재 저장소 상태 확인")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" status\n")])])]),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("On branch main\n\nNo commits yet\n\nUntracked files:\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to include "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" what will be committed"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t.eslintrc.json\n\tnode_modules/\n\tpackage-lock.json\n\tpackage.json\n\tsrc/\n\nnothing added to commit but untracked files present "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("use "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" to track"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("code",[t._v("Untracked files")]),t._v("에 버전 관리할 파일들이 보입니다. 근데 "),a("code",[t._v("node_modules")]),t._v("는 "),a("code",[t._v("npm install")]),t._v("로 설치하는 항목이므로 버전 관리에서 제외해야 합니다. 가급적 소스코드만 최소한으로 관리하는 것이 좋습니다.")]),t._v(" "),a("p",[a("code",[t._v(".gitignore")]),t._v(" 파일을 생성합니다.")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("node_modules\n")])])]),a("p",[t._v("이제 "),a("code",[t._v("node_modules")]),t._v(" 폴더를 제외했으니 첫 번째 커밋을 작성합니다.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 전체 파일을 버전 관리 항목으로 추가")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 첫 번째 커밋!")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init"')]),t._v("\n")])])]),a("p",[t._v("🎉 첫 번째 커밋을 성공했습니다. 이제 나중에 파일을 지우거나 수정하면 변경된 내용을 확인할 수 있고 복구할 수도 있습니다.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Git 더보기")]),t._v(" "),a("p",[t._v("📔 "),a("a",{attrs:{href:"https://git-scm.com/doc",target:"_blank",rel:"noopener noreferrer"}},[t._v("공식 문서"),a("OutboundLink")],1),a("br"),t._v("\n📔 "),a("a",{attrs:{href:"https://subicura.com/git/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git / GitHub 안내서"),a("OutboundLink")],1),a("br"),t._v("\n📝 "),a("a",{attrs:{href:"https://subicura.com/git/prepare/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 설치하기"),a("OutboundLink")],1),a("br"),t._v("\n📝 "),a("a",{attrs:{href:"https://subicura.com/git/guide/#git%E1%84%8B%E1%85%B4-%E1%84%90%E1%85%B3%E1%86%A8%E1%84%8C%E1%85%B5%E1%86%BC",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git 기본 가이드"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"tdd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tdd"}},[t._v("#")]),t._v(" TDD")]),t._v(" "),a("p",[t._v("Git도 도입했고, 이제 본격적으로 "),a("code",[t._v("Awesome API")]),t._v("의 두 번째 기능을 추가합니다. 지금 생각하는 기능은 "),a("code",[t._v("/ping")]),t._v("에 요청을 보내면 "),a("code",[t._v('{ "status": "ok" }')]),t._v("를 응답하는 API 입니다.")]),t._v(" "),a("Chat-KakaoRoom",[a("Chat-KakaoMsg",{attrs:{msg:"Git 첫 번째 Commit 성공했어요!",isMe:"true"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"오.. 축하합니다!",isMe:"false"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"이번에 새로운 기능을 추가하고 있는데.. 혹시 TDD 방식으로 만들어 볼 수 있을까요?",isMe:"true"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{avatar:"senior",user:"촋 CTO",msg:"테스트 코드가 마음에 드셨나 보네요 ㅎㅎ",isMe:"false"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"그럼 본격적으로 테스트 코드를 더 작성해볼까요??",isMe:"false"}}),t._v(" "),a("Chat-KakaoMsg",{attrs:{msg:"네네 ㅎㅎ",isMe:"true"}})],1),t._v(" "),a("p",[t._v("테스트 코드를 작성하고 확인할 때, 매번 "),a("code",[t._v("npm t")]),t._v("를 입력하는 것이 번거로우므로 "),a("code",[t._v("--watch")]),t._v(" 옵션을 추가합니다.")]),t._v(" "),a("p",[a("code",[t._v("package.json")]),t._v(" 파일을 다음과 같이 수정합니다.")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("div",{staticClass:"highlight-lines"},[a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("div",{staticClass:"highlighted"},[t._v(" ")]),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"scripts"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"start"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node src/server.js"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"lint"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"eslint ."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"format"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write \\"src/**/*.+(js|json)\\""')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"validate"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"npm run lint && npm run format"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test:watch"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jest --watch"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ⇠ 추가")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n...\n")])])]),a("p",[t._v("스크립트를 실행합니다.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 테스트 실행")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run test:watch\n")])])]),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("No tests found related to files changed since last commit.\nPress "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),t._v(" to run all tests, or run Jest with "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")]),t._v("--watchAll"),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n\nWatch Usage\n › Press a to run all tests.\n › Press f to run only failed tests.\n › Press p to filter by a filename regex pattern.\n › Press t to filter by a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" name regex pattern.\n › Press q to quit "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("watch")]),t._v(" mode.\n › Press Enter to trigger a "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" run.\n")])])]),a("p",[t._v("Jest는 똑똑하게 마지막 커밋 이후로 수정된 파일에 대해서 테스트를 수행합니다. 테스트 코드를 추가합니다.")]),t._v(" "),a("p",[a("code",[t._v("src/__tests__/app.js")]),t._v("에 "),a("code",[t._v("/ping")]),t._v("에 대한 테스트를 추가합니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'"/ping" 요청시 "status: ok" 응답 확인\'')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" res "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("inject")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ping"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("json")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toEqual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("테스트 코드를 저장하면 자동으로 테스트를 수행합니다.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v(" FAIL  src/__tests__/app.js\n  ✓ "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),t._v(" 요청시 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello: world"')]),t._v(" 응답 확인 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("79")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ✕ "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ping"')]),t._v(" 요청시 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status: ok"')]),t._v(" 응답 확인 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n  ● "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ping"')]),t._v(" 요청시 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status: ok"')]),t._v(" 응답 확인\n\n    expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("received"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(".toEqual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("expected"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" // deep equality\n\n    - Expected  - "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n    + Received  + "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n      Object "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    -   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),t._v(",\n    +   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not Found"')]),t._v(",\n    +   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"message"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Route GET:/ping not found"')]),t._v(",\n    +   "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"statusCode"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("404")]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("     url: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ping"')]),t._v(",\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("19")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("   expect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("res.json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),t._v(".toEqual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" status: "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("                      ^\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("21")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("\n\n      at Object."),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("anonymous"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("src/__tests__/app.js:20:22"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nTest Suites: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" failed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nTests:       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" failed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" total\nSnapshots:   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nTime:        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.309")]),t._v(" s, estimated "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" s\nRan all "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" suites related to changed files.\n\nWatch Usage: Press w to show more.\n")])])]),a("p",[t._v("아직 코드를 작성하기 전이므로 정상적으로 테스트가 실패하였습니다.")]),t._v(" "),a("p",[t._v("저장할 때마다 실시간으로 테스트 결과를 알려주니 편한 것 같습니다. "),a("s",[t._v("모니터를 하나 더 사야겠습니다")])]),t._v(" "),a("p",[t._v("이제 "),a("code",[t._v("src/app.js")]),t._v(" 파일에 "),a("code",[t._v("/ping")]),t._v(" 내용을 추가합니다.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\napp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ping"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" status"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ok"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("파일을 저장하면 자동으로 테스트를 수행합니다.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v(" PASS  src/__tests__/app.js\n  ✓ "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),t._v(" 요청시 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello: world"')]),t._v(" 응답 확인 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  ✓ "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/ping"')]),t._v(" 요청시 "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status: ok"')]),t._v(" 응답 확인 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" ms"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nTest Suites: "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nTests:       "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" total\nSnapshots:   "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" passed, "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" total\nTime:        "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.295")]),t._v(" s, estimated "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" s\nRan all "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" suites related to changed files.\n\nWatch Usage: Press w to show more.\n")])])]),a("p",[t._v("🎉 성공! 경고 없이 실행되었습니다.")]),t._v(" "),a("p",[t._v("새로운 기능을 순식간에 만들었고 테스트 코드가 있어 심적으로 안정감을 느낍니다. "),a("code",[t._v("toEqual")]),t._v("을 "),a("code",[t._v("toMatchInlineSnapshot")]),t._v(" 함수로 변경하고 수정한 코드를 커밋합니다.")]),t._v(" "),a("p",[t._v("아참! 커밋하기전에 정적 코드 분석을 먼저합니다.")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 정적분석, 포멧팅 실행")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" run validate\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 변경된 파일 추가")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 커밋")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add ping"')]),t._v("\n")])])]),a("h2",{attrs:{id:"마무리"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#마무리"}},[t._v("#")]),t._v(" 마무리")]),t._v(" "),a("p",[t._v("Git은 많은 회사에서 사용 중인 협업을 위한 필수 도구입니다. 단순 이력 관리 외에 다양한 부가기능이 있으며, CLI 외에 GUI 도구나 IDE에 내장된 기능을 적절히 사용하면 생산성을 높일 수 있습니다. 특히 Git의 고급기능을 사용하면 고오오오급 개발자처럼 보이는 효과가 있습니다.")]),t._v(" "),a("p",[t._v("이제 Git을 도입했으니 본격적으로 GitHub을 이용하여 팀과 협업해봅니다.")])],1)}),[],!1,null,null,null);s.default=e.exports}}]);